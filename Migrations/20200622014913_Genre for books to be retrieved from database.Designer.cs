// <auto-generated />
using System;
using BookListWeb.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BookListWeb.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200622014913_Genre for books to be retrieved from database")]
    partial class Genreforbookstoberetrievedfromdatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BookListWeb.Model.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(2000)");

                    b.Property<string>("Edition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genre")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ISBN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("PageCount")
                        .HasColumnType("int");

                    b.Property<byte[]>("Photo")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("varchar(10)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(9, 2)");

                    b.Property<string>("Publisher")
                        .HasColumnType("varchar(55)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("SubTitle")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Year")
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.HasKey("Id");

                    b.ToTable("Book");
                });

            modelBuilder.Entity("BookListWeb.Model.BookGenre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GenreName")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("BookGenre");

                    b.HasData(
                        new
                        {
                            Id = 100,
                            GenreName = "Sql Server"
                        },
                        new
                        {
                            Id = 200,
                            GenreName = ".NET Core"
                        },
                        new
                        {
                            Id = 300,
                            GenreName = "Salesforce"
                        },
                        new
                        {
                            Id = 400,
                            GenreName = "Bootstrap"
                        },
                        new
                        {
                            Id = 500,
                            GenreName = "jQuery"
                        },
                        new
                        {
                            Id = 600,
                            GenreName = "Java"
                        },
                        new
                        {
                            Id = 700,
                            GenreName = "PhP"
                        },
                        new
                        {
                            Id = 800,
                            GenreName = "Python"
                        },
                        new
                        {
                            Id = 900,
                            GenreName = "Oracle"
                        },
                        new
                        {
                            Id = 1000,
                            GenreName = "Linux"
                        },
                        new
                        {
                            Id = 1100,
                            GenreName = "Networking"
                        },
                        new
                        {
                            Id = 1200,
                            GenreName = "Javascript"
                        },
                        new
                        {
                            Id = 1300,
                            GenreName = "Pearl"
                        },
                        new
                        {
                            Id = 1400,
                            GenreName = "PowerBI"
                        },
                        new
                        {
                            Id = 1500,
                            GenreName = "Design Patterns"
                        },
                        new
                        {
                            Id = 1600,
                            GenreName = "VB.Net"
                        },
                        new
                        {
                            Id = 1700,
                            GenreName = "SqlLite"
                        },
                        new
                        {
                            Id = 1800,
                            GenreName = "C++"
                        },
                        new
                        {
                            Id = 1900,
                            GenreName = "Objective C"
                        },
                        new
                        {
                            Id = 2000,
                            GenreName = "SAS"
                        },
                        new
                        {
                            Id = 2100,
                            GenreName = "Cobol"
                        },
                        new
                        {
                            Id = 2200,
                            GenreName = "Excel"
                        },
                        new
                        {
                            Id = 2300,
                            GenreName = "Splunk"
                        },
                        new
                        {
                            Id = 2400,
                            GenreName = "DB2"
                        },
                        new
                        {
                            Id = 2500,
                            GenreName = "Angular"
                        },
                        new
                        {
                            Id = 2600,
                            GenreName = "Vue"
                        },
                        new
                        {
                            Id = 2700,
                            GenreName = "Docker"
                        },
                        new
                        {
                            Id = 2800,
                            GenreName = "Git"
                        },
                        new
                        {
                            Id = 2900,
                            GenreName = "React"
                        },
                        new
                        {
                            Id = 3000,
                            GenreName = "Jira"
                        },
                        new
                        {
                            Id = 3100,
                            GenreName = "Octopus"
                        },
                        new
                        {
                            Id = 3200,
                            GenreName = "ECMAScript"
                        },
                        new
                        {
                            Id = 3300,
                            GenreName = "Kubernetes"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
